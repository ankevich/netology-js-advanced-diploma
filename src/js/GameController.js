import themes from './themes';

export default class GameController {
  constructor(gamePlay, stateService) {
    this.gamePlay = gamePlay;
    this.stateService = stateService;
  }

  init() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
    this.gamePlay.drawUi(themes.prairie) 


    // -------------------------------------
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
    // -------------------------------------
    
    // –ù–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –∫–ª–µ—Ç–∫—É
    this.gamePlay.addCellEnterListener(this.onCellEnter)
    
    // –í—ã—Ö–æ–¥ –∏–∑ –∫–ª–µ—Ç–∫–∏
    this.gamePlay.addCellLeaveListener(this.onCellLeave)
    
    // –ö–ª–∏–∫ –ø–æ –∫–ª–µ—Ç–∫–µ
    this.gamePlay.addCellClickListener(this.onCellClick)


    // -------------------------------------
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ –∏–≥—Ä—ã
    // -------------------------------------

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–∫–µ New Game
    this.gamePlay.addNewGameListener(this.onNewGame)

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Save Game
    this.gamePlay.addSaveGameListener(this.onSaveGame)

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Load Game
    this.gamePlay.addLoadGameListener(this.onLoadGame)

    
  }

  onCellClick(index) {
    // TODO: react to click
    console.log(`Cell ${index} clicked`);
  }

  onCellEnter(index) {
    const character = this.stateService.getCharacter(index);
    if (character) {
      const message = `üéñ${character.level} ‚öî${character.attack} üõ°${character.defence} ‚ù§${character.health}`;
      this.gamePlay.showCellTooltip(message, index);
    }
  }

  onCellLeave(index) {
    this.gamePlay.hideCellTooltip(index);
  }

  onNewGame() {
    console.log('New game');
  }

  onSaveGame() {
    console.log('Save game');
  }

  onLoadGame() {
    console.log('Load game');
  }
}
